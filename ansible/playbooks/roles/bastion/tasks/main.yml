- name: Run package upgrade
  become: true
  ansible.builtin.apt:
    upgrade: yes
    update_cache: yes

- name: Install necessary packages
  become: true
  apt:
    name: "{{ item }}"
    state: present
  loop:
    - xrdp
    - xfce4
    - nftables
    - xfce4-terminal
    - python3
    - ansible
    - firefox-esr
    - nftables
    - htop

- name: Copy custom welcomes scripts
  become: true
  ansible.builtin.copy:
    src: "00-castle.sh"
    dest: "/etc/update-motd.d/00-castle"
    mode: 0755

- name: Add xrdp user to ssl-cert group
  become: true
  ansible.builtin.user:
    name: xrdp
    groups: ssl-cert
    append: yes

- name: Fix polkit authorization
  become: true
  ansible.builtin.copy:
    content: |
      [Allow Colord all Users]
      Identity=unix-user:*
      Action=org.freedesktop.color-manager.create-device;org.freedesktop.color-manager.create-profile;org.freedesktop.color-manager.delete-device;org.freedesktop.color-manager.delete-profile;org.freedesktop.color-manager.modify-device;org.freedesktop.color-manager.modify-profile
      ResultAny=no
      ResultInactive=no
      ResultActive=yes
    dest: /etc/polkit-1/localauthority/50-local.d/45-allow-colord.pkla

- name: Restart xrdp process
  become: true
  ansible.builtin.shell:
    cmd: 'systemctl restart xrdp'

- name: Add Lens repository key
  become: true
  ansible.builtin.apt_key:
    url: https://downloads.k8slens.dev/keys/gpg
    state: present

- name: Add Lens repository source
  become: true
  lineinfile:
    path: /etc/apt/sources.list.d/lens.list
    line: 'deb [arch=amd64] https://downloads.k8slens.dev/apt/debian stable main'
    state: present
    create: yes

- name: Run package update
  become: true
  ansible.builtin.apt:
    update_cache: yes

- name: Install Lens package
  become: true
  ansible.builtin.apt:
    name: lens
    state: present

- name: Set bastion hostname
  become: true
  ansible.builtin.hostname:
    name: bastion

- name: Create .ssh directory for nicolas user
  become: true
  ansible.builtin.file:
    path: /home/nicolas/.ssh
    state: directory
    owner: nicolas
    mode: 0700

- name: Generate an OpenSSH rsa keypair for nicolas user
  become: true
  community.crypto.openssh_keypair:
    path: /home/nicolas/.ssh/id_rsa
    owner: nicolas
    size: 4096
  register: keypair

- name: Create public key file for nicolas user
  become: true
  ansible.builtin.copy:
    content: "{{ keypair.public_key }} nicolas@{{ ansible_hostname }}"
    dest: /home/nicolas/.ssh/id_rsa.pub
    owner: nicolas
    mode: 0600

- name: Save localy nicolas public key
  delegate_to: localhost
  ansible.builtin.copy:
    content: "{{ keypair.public_key }} nicolas@{{ ansible_hostname }}"
    dest: "{{ playbook_dir }}/files/nicolas-bastion.pub"


- name: Create .ssh directory for prov user
  become: true
  ansible.builtin.file:
    path: "/home/{{ prov_user }}/.ssh"
    state: directory
    owner: "{{ prov_user }}"
    mode: 0700

# TOBE FIXED
- name: Generate an OpenSSH rsa keypair for prov user
  become: true
  community.crypto.openssh_keypair:
    path: "/home/{{ prov_user }}/.ssh/id_rsa"
    owner: "{{ prov_user }}"
    size: 4096
  register: keypair

- name: Create public key file for prov user
  become: true
  ansible.builtin.copy:
    content: "{{ keypair.public_key }} {{ prov_user }}@{{ ansible_hostname }}"
    dest: "/home/{{ prov_user }}/.ssh/id_rsa.pub"
    owner: "{{ prov_user }}"
    mode: 0600

- name: Save localy prov public key
  delegate_to: localhost
  ansible.builtin.copy:
    content: "{{ keypair.public_key }} {{ prov_user }}@{{ ansible_hostname }}"
    dest: "{{ playbook_dir }}/files/{{ prov_user }}-bastion.pub"

# - name: Generate an OpenSSH rsa keypair for users
#   become: true
#   community.crypto.openssh_keypair:
#     path: "/home/{{ item }}/.ssh/id_rsa"
#     owner: "{{ item }}"
#     size: 4096
#     force: yes
#   register: keypair
#   with_items: 
#     - nicolas
#     - "{{ prov_user }}"

# - name: Create public key file for users
#   become: true
#   ansible.builtin.copy:
#     content: "{{ item.1.public_key }} {{ item.0 }}@{{ ansible_hostname }}"
#     dest: "/home/{{ item.0 }}/.ssh/id_rsa.pub"
#     owner: "{{ item.0 }}"
#     mode: 0600
#     force: yes
#   loop: "{{ keypair.results }}"
#   when: item.1 is defined

# - name: Save locally Nicolas public key
#   delegate_to: localhost
#   ansible.builtin.copy:
#     content: "{{ item.1.public_key }} {{ item.0 }}@{{ ansible_hostname }}"
#     dest: "{{ playbook_dir }}/files/{{ item.0 }}-bastion.pub"
#     force: yes
#   loop: "{{ keypair.results }}"
#   when: item.1 is defined